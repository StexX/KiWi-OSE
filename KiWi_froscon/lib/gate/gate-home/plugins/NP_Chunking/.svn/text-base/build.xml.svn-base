<project name="TreeTagger" basedir="." >
  <property file="build.properties" />

  <property name="gate.home" location="../.." />
  <property name="gate.lib" location="${gate.home}/lib" />
  <property name="gate.jar" location="${gate.home}/bin/gate.jar" />
  <property name="src.dir" location="src" />
  <property name="classes.dir" location="classes" />
  <property name="jar.location" location="Chunker.jar" />

  <!-- Path to compile - includes gate.jar and GATE/lib/*.jar -->
  <path id="compile.classpath">
    <pathelement location="${gate.jar}" />
    <fileset dir="${gate.lib}">
      <include name="**/*.jar" />
      <include name="**/*.zip" />
    </fileset>
  </path>
  
  <!-- create build directory structure -->
  <target name="prepare">
    <mkdir dir="${classes.dir}" />
  </target>

  <!-- compile the source -->
  <target name="compile" depends="prepare">
    <javac classpathref="compile.classpath"
           srcdir="${src.dir}"
           destdir="${classes.dir}"
           debug="true"
           debuglevel="lines,source"
           source="1.4" />
  </target>

  <!-- create the JAR file -->
  <target name="jar" depends="compile" >
    <jar destfile="${jar.location}"
         update="false"
         basedir="${classes.dir}" />
  </target>

  <!-- remove the generated .class files -->
  <target name="clean.classes" >
    <delete dir="${classes.dir}" />
  </target>

  <!-- Clean up - remove .class and .jar files -->
  <target name="clean" depends="clean.classes" >
    <delete file="${jar.location}" />
  </target>

  <!-- Targets used by the main GATE build file:
         build: build the plugin - just calls "jar" target
         test : run the unit tests - there aren't any
         distro.prepare: remove intermediate files that shouldn't be in the
                         distribution
  -->
  <target name="build" depends="jar" />
  <target name="test" />
  <target name="distro.prepare" depends="clean.classes" />
</project>
